{
	"name": "Banks",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BanksFailure",
						"type": "DatasetReference"
					},
					"name": "BankList"
				},
				{
					"dataset": {
						"referenceName": "Institutions",
						"type": "DatasetReference"
					},
					"name": "Institutions"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText11",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable12",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable13",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable14",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Bank Name�} as string,",
				"          {City�} as string,",
				"          {State�} as string,",
				"          {Cert�} as integer,",
				"          {Acquiring Institution�} as string,",
				"          {Closing Date�} as string,",
				"          Fund as short",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> BankList",
				"source(output(",
				"          STNAME as string,",
				"          CERT as short,",
				"          DOCKET as short,",
				"          ACTIVE as boolean,",
				"          ADDRESS as string,",
				"          ASSET as integer,",
				"          BKCLASS as string,",
				"          CHARTER as short,",
				"          CHRTAGNT as string,",
				"          CONSERVE as boolean,",
				"          CITY as string,",
				"          CLCODE as short,",
				"          CMSA_NO as short,",
				"          CMSA as string,",
				"          COUNTY as string,",
				"          DATEUPDT as string,",
				"          DENOVO as boolean,",
				"          DEP as integer,",
				"          EFFDATE as string,",
				"          ENDEFYMD as string,",
				"          EQ as integer,",
				"          ESTYMD as string,",
				"          FDICDBS as short,",
				"          FDICREGN as string,",
				"          FDICSUPV as string,",
				"          FED as short,",
				"          FED_RSSD as integer,",
				"          FEDCHRTR as boolean,",
				"          FLDOFF as string,",
				"          IBA as boolean,",
				"          INACTIVE as boolean,",
				"          INSAGNT1 as string,",
				"          INSAGNT2 as string,",
				"          INSDATE as string,",
				"          INSTCRCD as boolean,",
				"          INSBIF as boolean,",
				"          INSCOML as boolean,",
				"          INSDIF as boolean,",
				"          INSFDIC as boolean,",
				"          INSSAIF as boolean,",
				"          INSSAVE as boolean,",
				"          MSA_NO as short,",
				"          MSA as string,",
				"          NAME as string,",
				"          NEWCERT as integer,",
				"          OAKAR as boolean,",
				"          OTSDIST as short,",
				"          OTSREGNM as string,",
				"          PROCDATE as string,",
				"          QBPRCOML as short,",
				"          REGAGNT as string,",
				"          REPDTE as string,",
				"          RISDATE as string,",
				"          STCHRTR as boolean,",
				"          ROA as double,",
				"          ROAQ as double,",
				"          ROE as double,",
				"          ROEQ as double,",
				"          RUNDATE as string,",
				"          SASSER as boolean,",
				"          LAW_SASSER_FLG as boolean,",
				"          STALP as string,",
				"          STCNTY as integer,",
				"          STNUM as short,",
				"          ZIP as integer,",
				"          SUPRV_FD as short,",
				"          OCCDIST as short,",
				"          UNINUM as short,",
				"          ULTCERT as integer,",
				"          CFPBEFFDTE as string,",
				"          CFPBENDDTE as string,",
				"          CFPBFLAG as boolean,",
				"          REGAGENT2 as string,",
				"          TE01N528 as string,",
				"          TE02N528 as string,",
				"          TE03N528 as string,",
				"          TE04N528 as string,",
				"          TE05N528 as string,",
				"          TE06N528 as string,",
				"          TE07N528 as string,",
				"          TE08N528 as string,",
				"          TE09N528 as string,",
				"          TE10N528 as string,",
				"          TE01N529 as string,",
				"          TE02N529 as string,",
				"          TE03N529 as string,",
				"          TE04N529 as string,",
				"          TE05N529 as string,",
				"          TE06N529 as string,",
				"          WEBADDR as string,",
				"          OFFICES as string,",
				"          CERTCONS as string,",
				"          PARCERT as short,",
				"          CITYHCR as string,",
				"          DEPDOM as integer,",
				"          FORM31 as boolean,",
				"          HCTMULT as boolean,",
				"          INSTAG as boolean,",
				"          MUTUAL as boolean,",
				"          NAMEHCR as string,",
				"          NETINC as integer,",
				"          NETINCQ as integer,",
				"          OFFDOM as short,",
				"          OFFFOR as short,",
				"          OFFOA as short,",
				"          RSSDHCR as integer,",
				"          STALPHCR as string,",
				"          SUBCHAPS as boolean,",
				"          ROAPTX as double,",
				"          ROAPTXQ as double,",
				"          TRUST as boolean,",
				"          SPECGRP as short,",
				"          SPECGRPN as string,",
				"          TRACT as boolean,",
				"          CSA as string,",
				"          CSA_NO as short,",
				"          CSA_FLG as boolean,",
				"          CBSA as string,",
				"          CBSA_NO as integer,",
				"          CBSA_METRO_NAME as string,",
				"          CBSA_METRO as integer,",
				"          CBSA_METRO_FLG as boolean,",
				"          CBSA_MICRO_FLG as boolean,",
				"          CBSA_DIV as string,",
				"          CBSA_DIV_NO as integer,",
				"          CBSA_DIV_FLG as boolean,",
				"          CB as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Institutions",
				"source(output(",
				"          CERT as integer,",
				"          CHCLASS1 as string,",
				"          CITYST as string,",
				"          COST as integer,",
				"          FAILDATE as string,",
				"          FIN as short,",
				"          ID as short,",
				"          NAME as string,",
				"          QBFASSET as integer,",
				"          QBFDEP as integer,",
				"          RESTYPE as string,",
				"          RESTYPE1 as string,",
				"          SAVR as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"Institutions select(mapColumn(",
				"          CERT,",
				"          ACTIVE,",
				"          ASSET,",
				"          CITY,",
				"          CITYHCR,",
				"          DATEUPDT,",
				"          DEP,",
				"          DEPDOM,",
				"          EQ,",
				"          ESTYMD,",
				"          NAME,",
				"          NAMEHCR,",
				"          HCTMULT,",
				"          NETINC,",
				"          NETINCQ,",
				"          OFFDOM,",
				"          OFFFOR,",
				"          OFFICES,",
				"          ROE,",
				"          ROEQ",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"BankList select(mapColumn(",
				"          BANKNAME = {Bank Name�},",
				"          CITY = {City�},",
				"          STATE = {State�},",
				"          CERT = {Cert�},",
				"          ACQUIRINGINST = {Acquiring Institution�},",
				"          CLOSINGDATE = {Closing Date�},",
				"          FUND = Fund",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"source1 select(mapColumn(",
				"          CERT,",
				"          FAILDATE,",
				"          RESTYPE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CERT,",
				"          FAILDATE,",
				"          RESTYPE",
				"     )) ~> sink3"
			]
		}
	}
}